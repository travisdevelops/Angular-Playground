{"version":3,"sources":["./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js","./node_modules/@tt/common/fesm2015/tt-common.js","./src/app/modules/calendar/pages/lotto-calendar/lotto-calendar.component.html","./src/app/modules/calendar/calendar-routing.module.ts","./src/app/modules/calendar/calendar.module.ts","./src/app/modules/calendar/classes/lotto-search.ts","./src/app/modules/calendar/pages/lotto-calendar/lotto-calendar.component.scss","./src/app/modules/calendar/pages/lotto-calendar/lotto-calendar.component.ts","./src/app/modules/calendar/services/lotto-data.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEoG;AAC9D;AACkB;AACM;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wBAAwB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbsDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,4BAA4B;AAC1F;AACA;AACA,wDAAwD,4BAA4B,IAAI,YAAY,GAAG,gBAAgB;AACvH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wBAAwB;AAC3D,6DAA6D,4BAA4B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,kBAAkB,eAAe,GAAG,GAAG,EAAE;AACzC,uCAAuC,eAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,6BAA6B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,wBAAwB,+CAAE,WAAW,gEAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6DAAM;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0DAAG;AAC5C;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yCAAyC,0DAAG;AAC5C;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yCAAyC,0DAAG;AAC5C;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yCAAyC,0DAAG;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,iBAAiB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,kDAAkD,8BAA8B,sDAAe,eAAe;AAC9G,mBAAmB,gEAAyB,EAAE,8CAA8C;AAC5F;AACA,KAAK;AACL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,oBAAoB,EAAE,EAAE,QAAQ,EAAE;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAAc;AAC5C;AACA;AACA;AACA;AACA;AACA,4DAA4D,qCAAqC;AACjG,wBAAwB,gEAAyB,EAAE,wDAAwD;AAC3G,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA;AACA;AACA;AACA,8EAA8E,SAAS;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kEAAkE,sCAAsC,sDAAe,wBAAwB,sDAAe,CAAC,wDAAQ,GAAG;AAC1K,2BAA2B,gEAAyB,EAAE,8DAA8D;AACpH;AACA,KAAK,6BAA6B;AAClC,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,6BAA6B,GAAG;AAC/D,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,oCAAoC,sDAAe,sBAAsB;AACvI,yBAAyB,gEAAyB,EAAE,0DAA0D;AAC9G;AACA,KAAK;AACL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,2BAA2B,EAAE,EAAE,QAAQ,EAAE;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,kDAAkD,gCAAgC;AAClF,mBAAmB,gEAAyB,EAAE,8CAA8C;AAC5F;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,mCAAmC;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mCAAmC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,0DAA0D,kCAAkC,sDAAe,cAAc;AACzH,uBAAuB,gEAAyB,EAAE,sDAAsD;AACxG;AACA,KAAK;AACL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,mBAAmB,EAAE,EAAE,QAAQ,EAAE;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4DAAc;AAC3C,6BAA6B,4DAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yEAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA,4EAA4E,2CAA2C,sDAAe,CAAC,wDAAQ,GAAG,sDAAe,CAAC,yDAAW,GAAG,sDAAe,oBAAoB;AACnN,gCAAgC,gEAAyB,EAAE,wEAAwE;AACnI;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,6BAA6B,OAAO,oDAAM,SAAS,yDAAW,IAAI,GAAG;AAC1E,KAAK,6BAA6B,OAAO,oDAAM,6BAA6B;AAC5E;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,GAAG;AACnB,sBAAsB,oDAAM;AAC5B,uBAAuB,yDAAW;AAClC,aAAa,GAAG,GAAG;AACnB,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mDAAmD;AAChF;AACA;AACA;AACA;AACA,oEAAoE,uCAAuC,sDAAe,0BAA0B,sDAAe,oBAAoB;AACvL,4BAA4B,gEAAyB,EAAE,gEAAgE;AACvH;AACA,KAAK,+BAA+B;AACpC,KAAK,6BAA6B,OAAO,oDAAM,6BAA6B;AAC5E;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,+BAA+B,GAAG;AACjE,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,2CAA2C,sDAAe,eAAe,sDAAe,CAAC,sDAAe,GAAG;AACvL,gCAAgC,gEAAyB,EAAE,wEAAwE;AACnI;AACA,KAAK,oBAAoB;AACzB,KAAK,OAAO,sDAAQ;AACpB;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,oBAAoB,GAAG,OAAO,sDAAe,EAAE,EAAE,EAAE,QAAQ,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0DAA0D;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,sCAAsC,0DAA0D;AAChG,sCAAsC,0DAA0D;AAChG;AACA;AACA;AACA;AACA,4BAA4B,8DAAuB,EAAE,6BAA6B;AAClF,4BAA4B,8DAAuB,EAAE,oDAAoD,0CAA0C,EAAE;AACrJ;AACA,SAAS,4EAA4E;AACrF,SAAS,qEAAqE;AAC9E,SAAS,oDAAoD;AAC7D,SAAS,sDAAsD;AAC/D,OAAO;AACP,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA;AACA,qBAAqB,4EAA4E;AACjG,qBAAqB,qEAAqE;AAC1F,qBAAqB,oDAAoD;AACzE,qBAAqB,sDAAsD;AAC3E;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8DAAuB,EAAE,yBAAyB;AAC1E,wBAAwB,8DAAuB,EAAE,gDAAgD,sCAAsC,EAAE;AACzI;AACA,SAAS,0DAA0D;AACnE;AACA,SAAS,oDAAoD;AAC7D;AACA,SAAS,+CAA+C;AACxD;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY;AACZ,cAAc,oDAAoD,gEAAyB,oBAAoB,kCAAkC,EAAE,EAAE;AACrJ,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,0DAA0D;AAC/E;AACA,qBAAqB,oDAAoD;AACzE;AACA,qBAAqB,+CAA+C;AACpE;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,8DAAuB,EAAE,8BAA8B;AACpF,6BAA6B,8DAAuB,EAAE,qDAAqD,2CAA2C,EAAE;AACxJ;AACA,SAAS,kEAAkE;AAC3E,SAAS,sEAAsE;AAC/E,OAAO;AACP,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA;AACA,qBAAqB,kEAAkE;AACvF,qBAAqB,sEAAsE;AAC3F;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE83B;;AAE93B,gC;;;;;;;;;;;;AC7lEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6a;AACtW;AACzB;AAC8J;AAC9G;;AAE9F;AACA,iBAAiB,oFAAoF,KAAK;AAC1G,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8BAA8B;AACrD,uBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8EAA8E;AAC9E,iBAAiB,sEAAgB;AACjC,IAAI,6EAAuB;AAC3B,IAAI,oEAAc;AAClB,IAAI,gEAAU,uGAAuG,CAAC,mEAAa,OAAO,CAAC,mEAAa,GAAG,aAAa,iEAAW,IAAI,iBAAiB,mEAAa,GAAG,+BAA+B,EAAE;AACzP,IAAI,4DAAM;AACV,IAAI,kEAAY;AAChB,IAAI,2EAAqB;AACzB,CAAC;AACD,mBAAmB,mEAAa;AAChC,IAAI,+DAAS;AACb,IAAI,wEAAkB;AACtB,CAAC;AACD,wEAAwE;AACxE,IAAI,oEAAc;AAClB,IAAI,4DAAM;AACV,IAAI,kEAAY;AAChB,CAAC;AACD;AACA;AACA,IAAI,gEAAU;AACd,IAAI,+DAAS;AACb,IAAI,uEAAiB;AACrB,CAAC;AACD,8EAA8E;AAC9E,iBAAiB,sEAAgB;AACjC,IAAI,6EAAuB;AAC3B,IAAI,oEAAc;AAClB,IAAI,gEAAU,uGAAuG,CAAC,mEAAa,OAAO,CAAC,mEAAa,GAAG,aAAa,iEAAW,KAAK,iBAAiB,mEAAa,GAAG,8BAA8B,EAAE;AACzP,IAAI,4DAAM;AACV,IAAI,kEAAY;AAChB,IAAI,2EAAqB;AACzB,CAAC;AACD,mBAAmB,mEAAa;AAChC,IAAI,+DAAS;AACb,IAAI,uEAAiB;AACrB,CAAC;AACD,uEAAuE;AACvE,iBAAiB,sEAAgB;AACjC,IAAI,oEAAc;AAClB,IA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","file":"modules-calendar-calendar-module.js","sourcesContent":["/**\n * @license Angular v10.0.2\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { Injectable, InjectionToken, Inject, PLATFORM_ID, Injector, NgModule } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { concatMap, filter, map } from 'rxjs/operators';\nimport { DOCUMENT, ɵparseCookieValue } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * @publicApi\n */\nimport * as ɵngcc0 from '@angular/core';\nclass HttpHandler {\n}\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * @publicApi\n */\nclass HttpBackend {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents the header configuration options for an HTTP request.\n * Instances are immutable. Modifying methods return a cloned\n * instance with the change. The original object is never changed.\n *\n * @publicApi\n */\nclass HttpHeaders {\n    /**  Constructs a new HTTP header object with the given values.*/\n    constructor(headers) {\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = () => {\n                this.headers = new Map();\n                headers.split('\\n').forEach(line => {\n                    const index = line.indexOf(':');\n                    if (index > 0) {\n                        const name = line.slice(0, index);\n                        const key = name.toLowerCase();\n                        const value = line.slice(index + 1).trim();\n                        this.maybeSetNormalizedName(name, key);\n                        if (this.headers.has(key)) {\n                            this.headers.get(key).push(value);\n                        }\n                        else {\n                            this.headers.set(key, [value]);\n                        }\n                    }\n                });\n            };\n        }\n        else {\n            this.lazyInit = () => {\n                this.headers = new Map();\n                Object.keys(headers).forEach(name => {\n                    let values = headers[name];\n                    const key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        this.headers.set(key, values);\n                        this.maybeSetNormalizedName(name, key);\n                    }\n                });\n            };\n        }\n    }\n    /**\n     * Checks for existence of a given header.\n     *\n     * @param name The header name to check for existence.\n     *\n     * @returns True if the header exists, false otherwise.\n     */\n    has(name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    }\n    /**\n     * Retrieves the first value of a given header.\n     *\n     * @param name The header name.\n     *\n     * @returns The value string if the header exists, null otherwise\n     */\n    get(name) {\n        this.init();\n        const values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    }\n    /**\n     * Retrieves the names of the headers.\n     *\n     * @returns A list of header names.\n     */\n    keys() {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    }\n    /**\n     * Retrieves a list of values for a given header.\n     *\n     * @param name The header name from which to retrieve values.\n     *\n     * @returns A string of values if the header exists, null otherwise.\n     */\n    getAll(name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    }\n    /**\n     * Appends a new value to the existing set of values for a header\n     * and returns them in a clone of the original instance.\n     *\n     * @param name The header name for which to append the values.\n     * @param value The value to append.\n     *\n     * @returns A clone of the HTTP headers object with the value appended to the given header.\n     */\n    append(name, value) {\n        return this.clone({ name, value, op: 'a' });\n    }\n    /**\n     * Sets or modifies a value for a given header in a clone of the original instance.\n     * If the header already exists, its value is replaced with the given value\n     * in the returned object.\n     *\n     * @param name The header name.\n     * @param value The value or values to set or overide for the given header.\n     *\n     * @returns A clone of the HTTP headers object with the newly set header value.\n     */\n    set(name, value) {\n        return this.clone({ name, value, op: 's' });\n    }\n    /**\n     * Deletes values for a given header in a clone of the original instance.\n     *\n     * @param name The header name.\n     * @param value The value or values to delete for the given header.\n     *\n     * @returns A clone of the HTTP headers object with the given value deleted.\n     */\n    delete(name, value) {\n        return this.clone({ name, value, op: 'd' });\n    }\n    maybeSetNormalizedName(name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    }\n    init() {\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach(update => this.applyUpdate(update));\n                this.lazyUpdate = null;\n            }\n        }\n    }\n    copyFrom(other) {\n        other.init();\n        Array.from(other.headers.keys()).forEach(key => {\n            this.headers.set(key, other.headers.get(key));\n            this.normalizedNames.set(key, other.normalizedNames.get(key));\n        });\n    }\n    clone(update) {\n        const clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    }\n    applyUpdate(update) {\n        const key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                let value = update.value;\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                const base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push(...value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                const toDelete = update.value;\n                if (!toDelete) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    let existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter(value => toDelete.indexOf(value) === -1);\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    }\n    /**\n     * @internal\n     */\n    forEach(fn) {\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach(key => fn(this.normalizedNames.get(key), this.headers.get(key)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides encoding and decoding of URL parameter and query-string values.\n *\n * Serializes and parses URL parameter keys and values to encode and decode them.\n * If you pass URL query parameters without encoding,\n * the query parameters can be misinterpreted at the receiving end.\n *\n *\n * @publicApi\n */\nclass HttpUrlEncodingCodec {\n    /**\n     * Encodes a key name for a URL parameter or query-string.\n     * @param key The key name.\n     * @returns The encoded key name.\n     */\n    encodeKey(key) {\n        return standardEncoding(key);\n    }\n    /**\n     * Encodes the value of a URL parameter or query-string.\n     * @param value The value.\n     * @returns The encoded value.\n     */\n    encodeValue(value) {\n        return standardEncoding(value);\n    }\n    /**\n     * Decodes an encoded URL parameter or query-string key.\n     * @param key The encoded key name.\n     * @returns The decoded key name.\n     */\n    decodeKey(key) {\n        return decodeURIComponent(key);\n    }\n    /**\n     * Decodes an encoded URL parameter or query-string value.\n     * @param value The encoded value.\n     * @returns The decoded value.\n     */\n    decodeValue(value) {\n        return decodeURIComponent(value);\n    }\n}\nfunction paramParser(rawParams, codec) {\n    const map = new Map();\n    if (rawParams.length > 0) {\n        const params = rawParams.split('&');\n        params.forEach((param) => {\n            const eqIdx = param.indexOf('=');\n            const [key, val] = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))];\n            const list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable; all mutation operations return a new instance.\n *\n * @publicApi\n */\nclass HttpParams {\n    constructor(options = {}) {\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        if (!!options.fromString) {\n            if (!!options.fromObject) {\n                throw new Error(`Cannot specify both fromString and fromObject.`);\n            }\n            this.map = paramParser(options.fromString, this.encoder);\n        }\n        else if (!!options.fromObject) {\n            this.map = new Map();\n            Object.keys(options.fromObject).forEach(key => {\n                const value = options.fromObject[key];\n                this.map.set(key, Array.isArray(value) ? value : [value]);\n            });\n        }\n        else {\n            this.map = null;\n        }\n    }\n    /**\n     * Reports whether the body includes one or more values for a given parameter.\n     * @param param The parameter name.\n     * @returns True if the parameter has one or more values,\n     * false if it has no value or is not present.\n     */\n    has(param) {\n        this.init();\n        return this.map.has(param);\n    }\n    /**\n     * Retrieves the first value for a parameter.\n     * @param param The parameter name.\n     * @returns The first value of the given parameter,\n     * or `null` if the parameter is not present.\n     */\n    get(param) {\n        this.init();\n        const res = this.map.get(param);\n        return !!res ? res[0] : null;\n    }\n    /**\n     * Retrieves all values for a  parameter.\n     * @param param The parameter name.\n     * @returns All values in a string array,\n     * or `null` if the parameter not present.\n     */\n    getAll(param) {\n        this.init();\n        return this.map.get(param) || null;\n    }\n    /**\n     * Retrieves all the parameters for this body.\n     * @returns The parameter names in a string array.\n     */\n    keys() {\n        this.init();\n        return Array.from(this.map.keys());\n    }\n    /**\n     * Appends a new value to existing values for a parameter.\n     * @param param The parameter name.\n     * @param value The new value to add.\n     * @return A new body with the appended value.\n     */\n    append(param, value) {\n        return this.clone({ param, value, op: 'a' });\n    }\n    /**\n     * Replaces the value for a parameter.\n     * @param param The parameter name.\n     * @param value The new value.\n     * @return A new body with the new value.\n     */\n    set(param, value) {\n        return this.clone({ param, value, op: 's' });\n    }\n    /**\n     * Removes a given value or all values from a parameter.\n     * @param param The parameter name.\n     * @param value The value to remove, if provided.\n     * @return A new body with the given value removed, or with all values\n     * removed if no value is specified.\n     */\n    delete(param, value) {\n        return this.clone({ param, value, op: 'd' });\n    }\n    /**\n     * Serializes the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     */\n    toString() {\n        this.init();\n        return this.keys()\n            .map(key => {\n            const eKey = this.encoder.encodeKey(key);\n            // `a: ['1']` produces `'a=1'`\n            // `b: []` produces `''`\n            // `c: ['1', '2']` produces `'c=1&c=2'`\n            return this.map.get(key).map(value => eKey + '=' + this.encoder.encodeValue(value))\n                .join('&');\n        })\n            // filter out empty values because `b: []` produces `''`\n            // which results in `a=1&&c=1&c=2` instead of `a=1&c=1&c=2` if we don't\n            .filter(param => param !== '')\n            .join('&');\n    }\n    clone(update) {\n        const clone = new HttpParams({ encoder: this.encoder });\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    }\n    init() {\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach(key => this.map.set(key, this.cloneFrom.map.get(key)));\n            this.updates.forEach(update => {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        const base = (update.op === 'a' ? this.map.get(update.param) : undefined) || [];\n                        base.push(update.value);\n                        this.map.set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            let base = this.map.get(update.param) || [];\n                            const idx = base.indexOf(update.value);\n                            if (idx !== -1) {\n                                base.splice(idx, 1);\n                            }\n                            if (base.length > 0) {\n                                this.map.set(update.param, base);\n                            }\n                            else {\n                                this.map.delete(update.param);\n                            }\n                        }\n                        else {\n                            this.map.delete(update.param);\n                            break;\n                        }\n                }\n            });\n            this.cloneFrom = this.updates = null;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine whether the given HTTP method may include a body.\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * @publicApi\n */\nclass HttpRequest {\n    constructor(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        let options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = (third !== undefined) ? third : null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = third;\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            const params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                const qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                const sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     */\n    serializeBody() {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return this.body.toString();\n    }\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     */\n    detectContentTypeHeader() {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    }\n    clone(update = {}) {\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        const method = update.method || this.method;\n        const url = update.url || this.url;\n        const responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        const body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        const withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        const reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        let headers = update.headers || this.headers;\n        let params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce((headers, name) => headers.set(name, update.setHeaders[name]), headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce((params, param) => params.set(param, update.setParams[param]), params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params,\n            headers,\n            reportProgress,\n            responseType,\n            withCredentials,\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type enumeration for the different kinds of `HttpEvent`.\n *\n * @publicApi\n */\nvar HttpEventType;\n(function (HttpEventType) {\n    /**\n     * The request was sent out over the wire.\n     */\n    HttpEventType[HttpEventType[\"Sent\"] = 0] = \"Sent\";\n    /**\n     * An upload progress event was received.\n     */\n    HttpEventType[HttpEventType[\"UploadProgress\"] = 1] = \"UploadProgress\";\n    /**\n     * The response status code and headers were received.\n     */\n    HttpEventType[HttpEventType[\"ResponseHeader\"] = 2] = \"ResponseHeader\";\n    /**\n     * A download progress event was received.\n     */\n    HttpEventType[HttpEventType[\"DownloadProgress\"] = 3] = \"DownloadProgress\";\n    /**\n     * The full response including the body was received.\n     */\n    HttpEventType[HttpEventType[\"Response\"] = 4] = \"Response\";\n    /**\n     * A custom event from an interceptor or a backend.\n     */\n    HttpEventType[HttpEventType[\"User\"] = 5] = \"User\";\n})(HttpEventType || (HttpEventType = {}));\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * @publicApi\n */\nclass HttpResponseBase {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     */\n    constructor(init, defaultStatus = 200, defaultStatusText = 'OK') {\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n}\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * @publicApi\n */\nclass HttpHeaderResponse extends HttpResponseBase {\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.ResponseHeader;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     */\n    clone(update = {}) {\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * @publicApi\n */\nclass HttpResponse extends HttpResponseBase {\n    /**\n     * Construct a new `HttpResponse`.\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.Response;\n        this.body = init.body !== undefined ? init.body : null;\n    }\n    clone(update = {}) {\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * @publicApi\n */\nclass HttpErrorResponse extends HttpResponseBase {\n    constructor(init) {\n        // Initialize with a default status of 0 / Unknown Error.\n        super(init, 0, 'Unknown Error');\n        this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (this.status >= 200 && this.status < 300) {\n            this.message = `Http failure during parsing for ${init.url || '(unknown url)'}`;\n        }\n        else {\n            this.message = `Http failure response for ${init.url || '(unknown url)'}: ${init.status} ${init.statusText}`;\n        }\n        this.error = init.error || null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. This function clones the object and adds the body.\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n */\nfunction addBody(options, body) {\n    return {\n        body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Performs HTTP requests.\n * This service is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies based on\n * the signature that is called (mainly the values of `observe` and `responseType`).\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n\n *\n * @usageNotes\n * Sample HTTP requests for the [Tour of Heroes](/tutorial/toh-pt0) application.\n *\n * ### HTTP Request Example\n *\n * ```\n *  // GET heroes whose name contains search term\n * searchHeroes(term: string): observable<Hero[]>{\n *\n *  const params = new HttpParams({fromString: 'name=term'});\n *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n * }\n * ```\n * ### JSONP Example\n * ```\n * requestJsonp(url, callback = 'callback') {\n *  return this.httpClient.jsonp(this.heroesURL, callback);\n * }\n * ```\n *\n * ### PATCH Example\n * ```\n * // PATCH one of the heroes' name\n * patchHero (id: number, heroName: string): Observable<{}> {\n * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n *  return this.httpClient.patch(url, {name: heroName}, httpOptions)\n *    .pipe(catchError(this.handleError('patchHero')));\n * }\n * ```\n *\n * @see [HTTP Guide](guide/http)\n *\n * @publicApi\n */\nclass HttpClient {\n    constructor(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an observable for a generic HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * You can pass an `HttpRequest` directly as the only parameter. In this case,\n     * the call returns an observable of the raw `HttpEvent` stream.\n     *\n     * Alternatively you can pass an HTTP method as the first parameter,\n     * a URL string as the second, and an options hash containing the request body as the third.\n     * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the\n     * type of returned observable.\n     *   * The `responseType` value determines how a successful response body is parsed.\n     *   * If `responseType` is the default `json`, you can pass a type interface for the resulting\n     * object as a type parameter to the call.\n     *\n     * The `observe` value determines the return type, according to what you are interested in\n     * observing.\n     *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including\n     * progress events by default.\n     *   * An `observe` value of response returns an observable of `HttpResponse<T>`,\n     * where the `T` parameter depends on the `responseType` and any optionally provided type\n     * parameter.\n     *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.\n     *\n     */\n    request(first, url, options = {}) {\n        let req;\n        // First, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = first;\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming `GET` unless a method is\n            // provided.\n            // Figure out the headers.\n            let headers = undefined;\n            if (options.headers instanceof HttpHeaders) {\n                headers = options.headers;\n            }\n            else {\n                headers = new HttpHeaders(options.headers);\n            }\n            // Sort out parameters.\n            let params = undefined;\n            if (!!options.params) {\n                if (options.params instanceof HttpParams) {\n                    params = options.params;\n                }\n                else {\n                    params = new HttpParams({ fromObject: options.params });\n                }\n            }\n            // Construct the request.\n            req = new HttpRequest(first, url, (options.body !== undefined ? options.body : null), {\n                headers,\n                params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        const events$ = of(req).pipe(concatMap((req) => this.handler.handle(req)));\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        const res$ = events$.pipe(filter((event) => event instanceof HttpResponse));\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        }));\n                    case 'blob':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        }));\n                    case 'text':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        }));\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return res$.pipe(map((res) => res.body));\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(`Unreachable: unhandled observe type ${options.observe}}`);\n        }\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `DELETE` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     *\n     * @param url     The endpoint URL.\n     * @param options The HTTP options to send with the request.\n     *\n     */\n    delete(url, options = {}) {\n        return this.request('DELETE', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `GET` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    get(url, options = {}) {\n        return this.request('GET', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `HEAD` request to execute on the server. The `HEAD` method returns\n     * meta information about the resource without transferring the\n     * resource itself. See the individual overloads for\n     * details on the return type.\n     */\n    head(url, options = {}) {\n        return this.request('HEAD', url, options);\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes a request with the special method\n     * `JSONP` to be dispatched via the interceptor pipeline.\n     * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain\n     * API endpoints that don't support newer,\n     * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.\n     * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\n     * requests even if the API endpoint is not located on the same domain (origin) as the client-side\n     * application making the request.\n     * The endpoint API must support JSONP callback for JSONP requests to work.\n     * The resource API returns the JSON response wrapped in a callback function.\n     * You can pass the callback function name as one of the query parameters.\n     * Note that JSONP requests can only be used with `GET` requests.\n     *\n     * @param url The resource URL.\n     * @param callbackParam The callback function name.\n     *\n     */\n    jsonp(url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes the configured\n     * `OPTIONS` request to execute on the server. This method allows the client\n     * to determine the supported HTTP methods and other capabilites of an endpoint,\n     * without implying a resource action. See the individual overloads for\n     * details on the return type.\n     */\n    options(url, options = {}) {\n        return this.request('OPTIONS', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PATCH` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    patch(url, body, options = {}) {\n        return this.request('PATCH', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `POST` request to execute on the server. The server responds with the location of\n     * the replaced resource. See the individual overloads for\n     * details on the return type.\n     */\n    post(url, body, options = {}) {\n        return this.request('POST', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PUT` request to execute on the server. The `PUT` method replaces an existing resource\n     * with a new set of values.\n     * See the individual overloads for details on the return type.\n     */\n    put(url, body, options = {}) {\n        return this.request('PUT', url, addBody(options, body));\n    }\n}\nHttpClient.ɵfac = function HttpClient_Factory(t) { return new (t || HttpClient)(ɵngcc0.ɵɵinject(HttpHandler)); };\nHttpClient.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpClient, factory: HttpClient.ɵfac });\nHttpClient.ctorParameters = () => [\n    { type: HttpHandler }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClient, [{\n        type: Injectable\n    }], function () { return [{ type: HttpHandler }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n *\n */\nclass HttpInterceptorHandler {\n    constructor(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    handle(req) {\n        return this.interceptor.intercept(req, this.next);\n    }\n}\n/**\n * A multi-provider token that represents the array of registered\n * `HttpInterceptor` objects.\n *\n * @publicApi\n */\nconst HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');\nclass NoopInterceptor {\n    intercept(req, next) {\n        return next.handle(req);\n    }\n}\nNoopInterceptor.ɵfac = function NoopInterceptor_Factory(t) { return new (t || NoopInterceptor)(); };\nNoopInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NoopInterceptor, factory: NoopInterceptor.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NoopInterceptor, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nlet nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nconst JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n */\nclass JsonpCallbackContext {\n}\n/**\n * Processes an `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n * @see `HttpHandler`\n * @see `HttpXhrBackend`\n *\n * @publicApi\n */\nclass JsonpClientBackend {\n    constructor(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     */\n    nextCallback() {\n        return `ng_jsonp_callback_${nextRequestId++}`;\n    }\n    /**\n     * Processes a JSONP request and returns an event stream of the results.\n     * @param req The request object.\n     * @returns An observable of the response events.\n     *\n     */\n    handle(req) {\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable((observer) => {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            const callback = this.nextCallback();\n            const url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${callback}$1`);\n            // Construct the <script> tag and point it at the URL.\n            const node = this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            let body = null;\n            // Whether the response callback has been called.\n            let finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            let cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            this.callbackMap[callback] = (data) => {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            };\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            const cleanup = () => {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete this.callbackMap[callback];\n            };\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            const onLoad = (event) => {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body,\n                    status: 200,\n                    statusText: 'OK',\n                    url,\n                }));\n                // Complete the stream, the response is over.\n                observer.complete();\n            };\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            const onError = (error) => {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error,\n                    status: 0,\n                    statusText: 'JSONP Error',\n                    url,\n                }));\n            };\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return () => {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            };\n        });\n    }\n}\nJsonpClientBackend.ɵfac = function JsonpClientBackend_Factory(t) { return new (t || JsonpClientBackend)(ɵngcc0.ɵɵinject(JsonpCallbackContext), ɵngcc0.ɵɵinject(DOCUMENT)); };\nJsonpClientBackend.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: JsonpClientBackend, factory: JsonpClientBackend.ɵfac });\nJsonpClientBackend.ctorParameters = () => [\n    { type: JsonpCallbackContext },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JsonpClientBackend, [{\n        type: Injectable\n    }], function () { return [{ type: JsonpCallbackContext }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * @see `HttpInterceptor`\n *\n * @publicApi\n */\nclass JsonpInterceptor {\n    constructor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * Identifies and handles a given JSONP request.\n     * @param req The outgoing request object to handle.\n     * @param next The next interceptor in the chain, or the backend\n     * if no interceptors remain in the chain.\n     * @returns An observable of the event stream.\n     */\n    intercept(req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle(req);\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    }\n}\nJsonpInterceptor.ɵfac = function JsonpInterceptor_Factory(t) { return new (t || JsonpInterceptor)(ɵngcc0.ɵɵinject(JsonpClientBackend)); };\nJsonpInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: JsonpInterceptor, factory: JsonpInterceptor.ɵfac });\nJsonpInterceptor.ctorParameters = () => [\n    { type: JsonpClientBackend }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JsonpInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: JsonpClientBackend }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * @publicApi\n */\nclass XhrFactory {\n}\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n *\n */\nclass BrowserXhr {\n    constructor() { }\n    build() {\n        return (new XMLHttpRequest());\n    }\n}\nBrowserXhr.ɵfac = function BrowserXhr_Factory(t) { return new (t || BrowserXhr)(); };\nBrowserXhr.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BrowserXhr, factory: BrowserXhr.ɵfac });\nBrowserXhr.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrowserXhr, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n/**\n * Uses `XMLHttpRequest` to send requests to a backend server.\n * @see `HttpHandler`\n * @see `JsonpClientBackend`\n *\n * @publicApi\n */\nclass HttpXhrBackend {\n    constructor(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Processes a request and returns a stream of response events.\n     * @param req The request object.\n     * @returns An observable of the response events.\n     */\n    handle(req) {\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(`Attempted to construct Jsonp request without JsonpClientModule installed.`);\n        }\n        // Everything happens on Observable subscription.\n        return new Observable((observer) => {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            const xhr = this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach((name, values) => xhr.setRequestHeader(name, values.join(',')));\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                const detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                const responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = ((responseType !== 'json') ? responseType : 'text');\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            const reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            let headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            const partialFromXhr = () => {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                const status = xhr.status === 1223 ? 204 : xhr.status;\n                const statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                const headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                const url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers, status, statusText, url });\n                return headerResponse;\n            };\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            const onLoad = () => {\n                // Read response state from the memoized partial data.\n                let { headers, status, statusText, url } = partialFromXhr();\n                // The body will be read out if present.\n                let body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                let ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (req.responseType === 'json' && typeof body === 'string') {\n                    // Save the original body, before attempting XSSI prefix stripping.\n                    const originalBody = body;\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                        body = body !== '' ? JSON.parse(body) : null;\n                    }\n                    catch (error) {\n                        // Since the JSON.parse failed, it's reasonable to assume this might not have been a\n                        // JSON response. Restore the original body (including any XSSI prefix) to deliver\n                        // a better error response.\n                        body = originalBody;\n                        // If this was an error request to begin with, leave it as a string, it probably\n                        // just isn't JSON. Otherwise, deliver the parsing error to the user.\n                        if (ok) {\n                            // Even though the response status was 2xx, this is still an error.\n                            ok = false;\n                            // The parse error contains the text of the body that failed to parse.\n                            body = { error, text: body };\n                        }\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                }\n            };\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            const onError = (error) => {\n                const { url } = partialFromXhr();\n                const res = new HttpErrorResponse({\n                    error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                    url: url || undefined,\n                });\n                observer.error(res);\n            };\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            let sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            const onDownProgress = (event) => {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                let progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            };\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            const onUpProgress = (event) => {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                let progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            };\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send(reqBody);\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return () => {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                if (xhr.readyState !== xhr.DONE) {\n                    xhr.abort();\n                }\n            };\n        });\n    }\n}\nHttpXhrBackend.ɵfac = function HttpXhrBackend_Factory(t) { return new (t || HttpXhrBackend)(ɵngcc0.ɵɵinject(XhrFactory)); };\nHttpXhrBackend.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpXhrBackend, factory: HttpXhrBackend.ɵfac });\nHttpXhrBackend.ctorParameters = () => [\n    { type: XhrFactory }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpXhrBackend, [{\n        type: Injectable\n    }], function () { return [{ type: XhrFactory }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst XSRF_COOKIE_NAME = new InjectionToken('XSRF_COOKIE_NAME');\nconst XSRF_HEADER_NAME = new InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * @publicApi\n */\nclass HttpXsrfTokenExtractor {\n}\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nclass HttpXsrfCookieExtractor {\n    constructor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * @internal for testing\n         */\n        this.parseCount = 0;\n    }\n    getToken() {\n        if (this.platform === 'server') {\n            return null;\n        }\n        const cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = ɵparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    }\n}\nHttpXsrfCookieExtractor.ɵfac = function HttpXsrfCookieExtractor_Factory(t) { return new (t || HttpXsrfCookieExtractor)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(XSRF_COOKIE_NAME)); };\nHttpXsrfCookieExtractor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpXsrfCookieExtractor, factory: HttpXsrfCookieExtractor.ɵfac });\nHttpXsrfCookieExtractor.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_COOKIE_NAME,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpXsrfCookieExtractor, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: String, decorators: [{\n                type: Inject,\n                args: [XSRF_COOKIE_NAME]\n            }] }]; }, null); })();\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nclass HttpXsrfInterceptor {\n    constructor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    intercept(req, next) {\n        const lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        const token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    }\n}\nHttpXsrfInterceptor.ɵfac = function HttpXsrfInterceptor_Factory(t) { return new (t || HttpXsrfInterceptor)(ɵngcc0.ɵɵinject(HttpXsrfTokenExtractor), ɵngcc0.ɵɵinject(XSRF_HEADER_NAME)); };\nHttpXsrfInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpXsrfInterceptor, factory: HttpXsrfInterceptor.ɵfac });\nHttpXsrfInterceptor.ctorParameters = () => [\n    { type: HttpXsrfTokenExtractor },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_HEADER_NAME,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpXsrfInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: HttpXsrfTokenExtractor }, { type: String, decorators: [{\n                type: Inject,\n                args: [XSRF_HEADER_NAME]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable `HttpHandler` that applies multiple interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * The interceptors are loaded lazily from the injector, to allow\n * interceptors to themselves inject classes depending indirectly\n * on `HttpInterceptingHandler` itself.\n * @see `HttpInterceptor`\n */\nclass HttpInterceptingHandler {\n    constructor(backend, injector) {\n        this.backend = backend;\n        this.injector = injector;\n        this.chain = null;\n    }\n    handle(req) {\n        if (this.chain === null) {\n            const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n            this.chain = interceptors.reduceRight((next, interceptor) => new HttpInterceptorHandler(next, interceptor), this.backend);\n        }\n        return this.chain.handle(req);\n    }\n}\nHttpInterceptingHandler.ɵfac = function HttpInterceptingHandler_Factory(t) { return new (t || HttpInterceptingHandler)(ɵngcc0.ɵɵinject(HttpBackend), ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };\nHttpInterceptingHandler.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpInterceptingHandler, factory: HttpInterceptingHandler.ɵfac });\nHttpInterceptingHandler.ctorParameters = () => [\n    { type: HttpBackend },\n    { type: Injector }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpInterceptingHandler, [{\n        type: Injectable\n    }], function () { return [{ type: HttpBackend }, { type: ɵngcc0.Injector }]; }, null); })();\n/**\n * Constructs an `HttpHandler` that applies interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * Use as a factory function within `HttpClientModule`.\n *\n *\n */\nfunction interceptingHandler(backend, interceptors = []) {\n    if (!interceptors) {\n        return backend;\n    }\n    return interceptors.reduceRight((next, interceptor) => new HttpInterceptorHandler(next, interceptor), backend);\n}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * Configures XSRF protection support for outgoing requests.\n *\n * For a server that supports a cookie-based XSRF protection system,\n * use directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no names are supplied, the default cookie name is `XSRF-TOKEN`\n * and the default header name is `X-XSRF-TOKEN`.\n *\n * @publicApi\n */\nclass HttpClientXsrfModule {\n    /**\n     * Disable the default XSRF protection.\n     */\n    static disable() {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    }\n    /**\n     * Configure XSRF protection.\n     * @param options An object that can specify either or both\n     * cookie name or header name.\n     * - Cookie name default is `XSRF-TOKEN`.\n     * - Header name default is `X-XSRF-TOKEN`.\n     *\n     */\n    static withOptions(options = {}) {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    }\n}\nHttpClientXsrfModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpClientXsrfModule });\nHttpClientXsrfModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpClientXsrfModule_Factory(t) { return new (t || HttpClientXsrfModule)(); }, providers: [\n        HttpXsrfInterceptor,\n        { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n        { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n        { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n        { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n    ] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClientXsrfModule, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    HttpXsrfInterceptor,\n                    { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                    { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                    { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                    { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                ]\n            }]\n    }], null, null); })();\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for XSRF. Automatically imported by `HttpClientModule`.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * @publicApi\n */\nclass HttpClientModule {\n}\nHttpClientModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpClientModule });\nHttpClientModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpClientModule_Factory(t) { return new (t || HttpClientModule)(); }, providers: [\n        HttpClient,\n        { provide: HttpHandler, useClass: HttpInterceptingHandler },\n        HttpXhrBackend,\n        { provide: HttpBackend, useExisting: HttpXhrBackend },\n        BrowserXhr,\n        { provide: XhrFactory, useExisting: BrowserXhr },\n    ], imports: [[\n            HttpClientXsrfModule.withOptions({\n                cookieName: 'XSRF-TOKEN',\n                headerName: 'X-XSRF-TOKEN'\n            }),\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HttpClientModule, { imports: [HttpClientXsrfModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClientModule, [{\n        type: NgModule,\n        args: [{\n                /**\n                 * Optional configuration for XSRF protection.\n                 */\n                imports: [\n                    HttpClientXsrfModule.withOptions({\n                        cookieName: 'XSRF-TOKEN',\n                        headerName: 'X-XSRF-TOKEN'\n                    }),\n                ],\n                /**\n                 * Configures the [dependency injector](guide/glossary#injector) where it is imported\n                 * with supporting services for HTTP communications.\n                 */\n                providers: [\n                    HttpClient,\n                    { provide: HttpHandler, useClass: HttpInterceptingHandler },\n                    HttpXhrBackend,\n                    { provide: HttpBackend, useExisting: HttpXhrBackend },\n                    BrowserXhr,\n                    { provide: XhrFactory, useExisting: BrowserXhr },\n                ]\n            }]\n    }], null, null); })();\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for JSONP.\n * Without this module, Jsonp requests reach the backend\n * with method JSONP, where they are rejected.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * @publicApi\n */\nclass HttpClientJsonpModule {\n}\nHttpClientJsonpModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpClientJsonpModule });\nHttpClientJsonpModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpClientJsonpModule_Factory(t) { return new (t || HttpClientJsonpModule)(); }, providers: [\n        JsonpClientBackend,\n        { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n        { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n    ] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClientJsonpModule, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    JsonpClientBackend,\n                    { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                    { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HTTP_INTERCEPTORS, HttpBackend, HttpClient, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpErrorResponse, HttpEventType, HttpHandler, HttpHeaderResponse, HttpHeaders, HttpParams, HttpRequest, HttpResponse, HttpResponseBase, HttpUrlEncodingCodec, HttpXhrBackend, HttpXsrfTokenExtractor, JsonpClientBackend, JsonpInterceptor, XhrFactory, HttpInterceptingHandler as ɵHttpInterceptingHandler, NoopInterceptor as ɵangular_packages_common_http_http_a, JsonpCallbackContext as ɵangular_packages_common_http_http_b, jsonpCallbackContext as ɵangular_packages_common_http_http_c, BrowserXhr as ɵangular_packages_common_http_http_d, XSRF_COOKIE_NAME as ɵangular_packages_common_http_http_e, XSRF_HEADER_NAME as ɵangular_packages_common_http_http_f, HttpXsrfCookieExtractor as ɵangular_packages_common_http_http_g, HttpXsrfInterceptor as ɵangular_packages_common_http_http_h };\n\n//# sourceMappingURL=http.js.map","import { ɵɵgetCurrentView, ɵɵelementContainerStart, ɵɵelementStart, ɵɵlistener, ɵɵrestoreView, ɵɵnextContext, ɵɵreference, ɵɵtext, ɵɵelementEnd, ɵɵelementContainerEnd, ɵɵadvance, ɵɵtextInterpolate1, ɵɵproperty, ɵɵtextInterpolate, ɵɵstyleProp, ɵɵtemplate, ɵɵpureFunction2, ɵɵclassProp, ɵɵdefineComponent, ɵsetClassMetadata, Component, Input, ɵɵdefineNgModule, ɵɵdefineInjector, ɵɵsetNgModuleScope, NgModule } from '@angular/core';\nimport { NgIf, NgForOf, NgClass, CommonModule } from '@angular/common';\nimport { Subject, combineLatest } from 'rxjs';\nimport { FormControl, SelectControlValueAccessor, NgControlStatus, FormControlDirective, DefaultValueAccessor, NgSelectOption, ɵangular_packages_forms_forms_x, ReactiveFormsModule } from '@angular/forms';\nimport { distinctUntilChanged, filter, tap, takeUntil, map, startWith } from 'rxjs/operators';\n\nclass TTCalendar {\r\n    constructor({ date = new Date(), events = [], min = new Date(1000, 0), max = new Date(9999, 11) } = {}) {\r\n        this.dateChanged$ = new Subject();\r\n        this._weeks = [];\r\n        this.events = events;\r\n        this.min = min;\r\n        this.max = max;\r\n        this.setValidDate(date, true);\r\n    }\r\n    static dateToString(d) {\r\n        return d.getFullYear() + '-' +\r\n            ('0' + (d.getMonth() + 1)).slice(-2) + '-' +\r\n            ('0' + d.getDate()).slice(-2);\r\n    }\r\n    static fullDateToString(day, month, year) {\r\n        return parseInt(year, 10) + '-' +\r\n            ('0' + (parseInt(month, 10) + 1)).slice(-2) + '-' +\r\n            ('0' + parseInt(day, 10)).slice(-2);\r\n    }\r\n    static stringToDate(date) {\r\n        return new Date(parseInt(date.split('-')[0], 10), parseInt(date.split('-')[1], 10) - 1, parseInt(date.split('-')[2], 10), 0, 0, 0, 0);\r\n    }\r\n    // Get First Day of Selected Month - Day of Week 0-6\r\n    getfirstWeekDayOfCurrMonth() {\r\n        return new Date(this._date.getFullYear(), this._date.getMonth()).getDay();\r\n    }\r\n    // Get Last Day of Selected Month - Day Number\r\n    getDaysInMonth() {\r\n        return new Date(this._date.getFullYear(), this._date.getMonth() + 1, 0).getDate();\r\n    }\r\n    getlastDateOfLastMonth() {\r\n        return new Date(this._date.getFullYear(), this._date.getMonth(), 0).getDate();\r\n    }\r\n    set date(date) {\r\n        this.setValidDate(date, true);\r\n    }\r\n    get year() {\r\n        return this._date.getFullYear();\r\n    }\r\n    set year(year) {\r\n        if (!isNaN(year)) {\r\n            if (typeof year === 'string') {\r\n                year = parseInt(year, 10);\r\n            }\r\n            const date = new Date(this._date);\r\n            date.setFullYear(year);\r\n            this.setValidDate(date);\r\n        }\r\n    }\r\n    get month() {\r\n        return this._date.getMonth();\r\n    }\r\n    set month(month) {\r\n        const date = new Date(this._date);\r\n        date.setMonth(month);\r\n        this.setValidDate(date);\r\n    }\r\n    get monthString() {\r\n        return TTCalendar.monthNames[this._date.getMonth()];\r\n    }\r\n    get weeks() {\r\n        return this._weeks;\r\n    }\r\n    get min() {\r\n        return this._min;\r\n    }\r\n    set min(date) {\r\n        if (date <= this.max || !this.max) {\r\n            this._min = new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n        }\r\n    }\r\n    get max() {\r\n        return this._max;\r\n    }\r\n    set max(date) {\r\n        if (date >= this.min || !this.min) {\r\n            this._max = new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n        }\r\n    }\r\n    set events(events) {\r\n        this._events = events;\r\n        this.sortEvents();\r\n    }\r\n    get events() {\r\n        return this._events;\r\n    }\r\n    get isToday() {\r\n        const today = new Date();\r\n        return this._date.getMonth() === today.getMonth()\r\n            && this._date.getFullYear() === today.getFullYear()\r\n            && this._date.getDate() === today.getDate();\r\n    }\r\n    get canMovePrev() { return this._date > this.min; }\r\n    get canMoveNext() { return this._date < this.max; }\r\n    // Previous Month\r\n    prevMonth() {\r\n        if (this.canMovePrev) {\r\n            const date = new Date(this._date);\r\n            date.setMonth(date.getMonth() - 1);\r\n            this.setValidDate(date);\r\n        }\r\n    }\r\n    // Next Month\r\n    nextMonth() {\r\n        if (this.canMoveNext) {\r\n            const date = new Date(this._date);\r\n            date.setMonth(date.getMonth() + 1);\r\n            this.setValidDate(date);\r\n        }\r\n    }\r\n    today() {\r\n        let today = new Date();\r\n        today = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 0, 0, 0, 0);\r\n        if (!this.isToday) {\r\n            this.setValidDate(today, true);\r\n        }\r\n    }\r\n    addEvent(event) {\r\n        if (this.isEventWithinCalendarRange(event, this.min, this.max)) {\r\n            this._events.push(event);\r\n            this.addSortedEvent(event);\r\n            if (this.isEventWithinCalendarRange(event, this.getCalendarStartRange(), this.getCalendarEndRange())) {\r\n                this.refreshCalendar();\r\n            }\r\n        }\r\n    }\r\n    // Calculate Dates and Events\r\n    refreshCalendar() {\r\n        const cachedDays = [...this._weeks].flatMap((s) => s);\r\n        this._weeks = [];\r\n        // Do Calculations\r\n        const lastDateOfLastMonth = this.getlastDateOfLastMonth();\r\n        const firstWeekDayOfCurrMonth = this.getfirstWeekDayOfCurrMonth();\r\n        const totalDaysInMonth = this.getDaysInMonth();\r\n        // Calculate Dates\r\n        const lastMonth = new Date(this._date);\r\n        lastMonth.setMonth(lastMonth.getMonth() - 1);\r\n        const nextMonth = new Date(this._date);\r\n        nextMonth.setMonth(nextMonth.getMonth() + 1);\r\n        let week = [];\r\n        // Set Dates\r\n        for (let i = 0; i < TTCalendar.dayCount; i++) {\r\n            let y;\r\n            let m;\r\n            let d;\r\n            if (i < firstWeekDayOfCurrMonth) { // Last Month\r\n                d = lastDateOfLastMonth - firstWeekDayOfCurrMonth + 1 + i;\r\n                m = lastMonth.getMonth();\r\n                y = lastMonth.getFullYear();\r\n            }\r\n            else if (i < firstWeekDayOfCurrMonth + totalDaysInMonth) { // Current Month\r\n                d = i - firstWeekDayOfCurrMonth + 1;\r\n                m = this._date.getMonth();\r\n                y = this._date.getFullYear();\r\n            }\r\n            else { // Next Month\r\n                d = i - totalDaysInMonth - firstWeekDayOfCurrMonth + 1;\r\n                m = nextMonth.getMonth();\r\n                y = nextMonth.getFullYear();\r\n            }\r\n            const date = TTCalendar.fullDateToString(d, m, y);\r\n            const cachedDay = cachedDays.find((cd) => cd.date === date);\r\n            // console.log(i);\r\n            if (cachedDay) {\r\n                week.push(Object.assign({}, cachedDay));\r\n                // console.log('Cached ' + date );\r\n            }\r\n            else {\r\n                // console.log(d, m, y);\r\n                week.push(this.getDayEvents(d, m, y));\r\n            }\r\n            const currentWeekCount = Math.floor((i + 1) / TTCalendar.daysOfWeek.length);\r\n            if (currentWeekCount > this._weeks.length) { // If New Week\r\n                this._weeks.push(week);\r\n                week = [];\r\n            }\r\n        }\r\n    }\r\n    setValidDate(dateToCheck, selectDate = false) {\r\n        const currDate = new Date(this._date);\r\n        if (selectDate) {\r\n            this.selectedDay = TTCalendar.dateToString(dateToCheck);\r\n        }\r\n        else {\r\n            this.selectedDay = TTCalendar.dateToString(new Date());\r\n        }\r\n        if (dateToCheck >= this.min && dateToCheck <= this.max) {\r\n            this._date = new Date(dateToCheck);\r\n        }\r\n        else if (dateToCheck < this.min) {\r\n            this._date = new Date(this.min);\r\n        }\r\n        else if (dateToCheck > this.max) {\r\n            this._date = new Date(this.max);\r\n        }\r\n        const dateChanged = currDate.getMonth() !== this.month || currDate.getFullYear() !== this.year;\r\n        if (dateChanged) {\r\n            this.refreshCalendar();\r\n            this.dateChanged$.next(this._date);\r\n        }\r\n    }\r\n    getSortedEvents(year, month, day) {\r\n        if (this._sortedEvents) {\r\n            if (year != null && month == null && day == null) {\r\n                return Object.values(this._sortedEvents[year])\r\n                    .flatMap((m) => Object.values(m).flatMap((mv) => mv)) || [];\r\n            }\r\n            else if (year != null && month != null && day == null) {\r\n                if (this._sortedEvents[year] && this._sortedEvents[year][month]) {\r\n                    return Object.values(this._sortedEvents[year][month]).flatMap((m) => m) || [];\r\n                }\r\n                return [];\r\n            }\r\n            else if (year != null && month != null && day != null) {\r\n                if (this._sortedEvents[year] && this._sortedEvents[year][month] && this._sortedEvents[year][month][day]) {\r\n                    return this._sortedEvents[year][month][day] || [];\r\n                }\r\n                return [];\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n    sortEvents() {\r\n        this._sortedEvents = {};\r\n        this._events.forEach((event) => {\r\n            this.addSortedEvent(event);\r\n        });\r\n    }\r\n    addSortedEvent(event) {\r\n        if (!this._sortedEvents[event.startDate.getFullYear()]) {\r\n            this._sortedEvents[event.startDate.getFullYear()] = {};\r\n        }\r\n        if (!this._sortedEvents[event.startDate.getFullYear()][event.startDate.getMonth()]) {\r\n            this._sortedEvents[event.startDate.getFullYear()][event.startDate.getMonth()] = {};\r\n        }\r\n        if (!this._sortedEvents[event.startDate.getFullYear()][event.startDate.getMonth()][event.startDate.getDate()]) {\r\n            this._sortedEvents[event.startDate.getFullYear()][event.startDate.getMonth()][event.startDate.getDate()] = [];\r\n        }\r\n        this._sortedEvents[event.startDate.getFullYear()][event.startDate.getMonth()][event.startDate.getDate()].push(event);\r\n        this._sortedEvents[event.startDate.getFullYear()][event.startDate.getMonth()][event.startDate.getDate()]\r\n            .sort((a, b) => {\r\n            const eventEndDateA = a.endDate || a.startDate;\r\n            const eventEndDateB = b.endDate || b.startDate;\r\n            const dateRangeA = Math.abs(a.startDate.getTime() - eventEndDateA.getTime());\r\n            const dateRangeB = Math.abs(b.startDate.getTime() - eventEndDateB.getTime());\r\n            if (dateRangeA > dateRangeB) { // A Date Range Is More Than B\r\n                return -1;\r\n            }\r\n            else if (dateRangeA < dateRangeB) { // A Date Range Is More Than B\r\n                return 1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n    getCalendarStartRange() {\r\n        const lastDateOfLastMonth = this.getlastDateOfLastMonth();\r\n        const firstWeekDayOfCurrMonth = this.getfirstWeekDayOfCurrMonth();\r\n        const lastMonth = new Date(this._date);\r\n        lastMonth.setMonth(lastMonth.getMonth() - 1);\r\n        return new Date(lastMonth.getFullYear(), lastMonth.getMonth(), lastDateOfLastMonth - firstWeekDayOfCurrMonth + 1);\r\n    }\r\n    getCalendarEndRange() {\r\n        const firstWeekDayOfCurrMonth = this.getfirstWeekDayOfCurrMonth();\r\n        const totalDaysInMonth = this.getDaysInMonth();\r\n        // Calculate Dates\r\n        const nextMonth = new Date(this._date);\r\n        nextMonth.setMonth(nextMonth.getMonth() + 1);\r\n        return new Date(nextMonth.getFullYear(), nextMonth.getMonth(), TTCalendar.dayCount - totalDaysInMonth - firstWeekDayOfCurrMonth + 1);\r\n    }\r\n    isEventWithinCalendarRange(event, startDate, endDate) {\r\n        const eventEndDate = event.endDate || event.startDate;\r\n        return (event.startDate >= startDate && event.startDate <= endDate) ||\r\n            (eventEndDate >= startDate && eventEndDate <= endDate) ||\r\n            (event.startDate <= startDate && eventEndDate >= endDate);\r\n    }\r\n    getDayEvents(day, month, year) {\r\n        return {\r\n            day,\r\n            month,\r\n            year,\r\n            date: TTCalendar.fullDateToString(day, month, year),\r\n            events: this.getSortedEvents(year, month, day)\r\n        };\r\n    }\r\n}\r\nTTCalendar.daysOfWeek = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\r\nTTCalendar.daysOfWeekLong = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\nTTCalendar.monthNames = ['Jan', 'Feb', 'Mar',\r\n    'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\nTTCalendar.monthNamesLong = ['January', 'February', 'March',\r\n    'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nTTCalendar.dayCount = 42;\n\nfunction TTCalendarComponent_ng_container_0_ng_container_4_Template(rf, ctx) { if (rf & 1) {\r\n    const _r11 = ɵɵgetCurrentView();\r\n    ɵɵelementContainerStart(0);\r\n    ɵɵelementStart(1, \"span\", 14);\r\n    ɵɵlistener(\"click\", function TTCalendarComponent_ng_container_0_ng_container_4_Template_span_click_1_listener() { ɵɵrestoreView(_r11); ɵɵnextContext(); const _r2 = ɵɵreference(6); const ctx_r10 = ɵɵnextContext(); return ctx_r10.editMonth(_r2); });\r\n    ɵɵtext(2);\r\n    ɵɵelementEnd();\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = ɵɵnextContext(2);\r\n    ɵɵadvance(2);\r\n    ɵɵtextInterpolate1(\"\", ctx_r1.calendar.monthString, \" \");\r\n} }\r\nfunction TTCalendarComponent_ng_container_0_option_7_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"option\", 15);\r\n    ɵɵtext(1);\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const m_r12 = ctx.$implicit;\r\n    const i_r13 = ctx.index;\r\n    ɵɵproperty(\"value\", i_r13);\r\n    ɵɵadvance(1);\r\n    ɵɵtextInterpolate(m_r12);\r\n} }\r\nfunction TTCalendarComponent_ng_container_0_ng_container_8_Template(rf, ctx) { if (rf & 1) {\r\n    const _r15 = ɵɵgetCurrentView();\r\n    ɵɵelementContainerStart(0);\r\n    ɵɵelementStart(1, \"span\", 14);\r\n    ɵɵlistener(\"click\", function TTCalendarComponent_ng_container_0_ng_container_8_Template_span_click_1_listener() { ɵɵrestoreView(_r15); ɵɵnextContext(); const _r5 = ɵɵreference(10); const ctx_r14 = ɵɵnextContext(); return ctx_r14.editYear(_r5); });\r\n    ɵɵtext(2);\r\n    ɵɵelementEnd();\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const ctx_r4 = ɵɵnextContext(2);\r\n    ɵɵadvance(2);\r\n    ɵɵtextInterpolate(ctx_r4.calendar.year);\r\n} }\r\nfunction TTCalendarComponent_ng_container_0_span_12_Template(rf, ctx) { if (rf & 1) {\r\n    const _r17 = ɵɵgetCurrentView();\r\n    ɵɵelementStart(0, \"span\", 16);\r\n    ɵɵlistener(\"click\", function TTCalendarComponent_ng_container_0_span_12_Template_span_click_0_listener() { ɵɵrestoreView(_r17); const ctx_r16 = ɵɵnextContext(2); return ctx_r16.calendar.prevMonth(); });\r\n    ɵɵtext(1, \"\\u2190\");\r\n    ɵɵelementEnd();\r\n} }\r\nfunction TTCalendarComponent_ng_container_0_span_15_Template(rf, ctx) { if (rf & 1) {\r\n    const _r19 = ɵɵgetCurrentView();\r\n    ɵɵelementStart(0, \"span\", 17);\r\n    ɵɵlistener(\"click\", function TTCalendarComponent_ng_container_0_span_15_Template_span_click_0_listener() { ɵɵrestoreView(_r19); const ctx_r18 = ɵɵnextContext(2); return ctx_r18.calendar.nextMonth(); });\r\n    ɵɵtext(1, \"\\u2192\");\r\n    ɵɵelementEnd();\r\n} }\r\nfunction TTCalendarComponent_ng_container_0_th_19_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"th\");\r\n    ɵɵtext(1);\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const day_r20 = ctx.$implicit;\r\n    ɵɵadvance(1);\r\n    ɵɵtextInterpolate(day_r20);\r\n} }\r\nfunction TTCalendarComponent_ng_container_0_tr_21_td_1_ng_container_4_span_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"span\", 22);\r\n    ɵɵtext(1);\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const event_r26 = ɵɵnextContext().$implicit;\r\n    ɵɵstyleProp(\"background-color\", \"rgb(\" + event_r26.color.x + \",\" + event_r26.color.y + \",\" + event_r26.color.z + \")\");\r\n    ɵɵadvance(1);\r\n    ɵɵtextInterpolate(event_r26.title);\r\n} }\r\nfunction TTCalendarComponent_ng_container_0_tr_21_td_1_ng_container_4_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementContainerStart(0);\r\n    ɵɵtemplate(1, TTCalendarComponent_ng_container_0_tr_21_td_1_ng_container_4_span_1_Template, 2, 3, \"span\", 21);\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const i_r27 = ctx.index;\r\n    const day_r23 = ɵɵnextContext().$implicit;\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngIf\", day_r23.events.length <= 4 || day_r23.events.length > 4 && i_r27 < 3);\r\n} }\r\nfunction TTCalendarComponent_ng_container_0_tr_21_td_1_span_5_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"span\", 23);\r\n    ɵɵtext(1);\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const day_r23 = ɵɵnextContext().$implicit;\r\n    ɵɵadvance(1);\r\n    ɵɵtextInterpolate1(\"View \", day_r23.events.length - 4, \" Other Events\");\r\n} }\r\nconst _c0 = function (a0, a1) { return { \"selected-month\": a0, \"selected-day\": a1 }; };\r\nfunction TTCalendarComponent_ng_container_0_tr_21_td_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"td\");\r\n    ɵɵelementStart(1, \"div\", 18);\r\n    ɵɵelementStart(2, \"span\", 19);\r\n    ɵɵtext(3);\r\n    ɵɵelementEnd();\r\n    ɵɵtemplate(4, TTCalendarComponent_ng_container_0_tr_21_td_1_ng_container_4_Template, 2, 1, \"ng-container\", 13);\r\n    ɵɵtemplate(5, TTCalendarComponent_ng_container_0_tr_21_td_1_span_5_Template, 2, 1, \"span\", 20);\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const day_r23 = ctx.$implicit;\r\n    const ctx_r22 = ɵɵnextContext(3);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngClass\", ɵɵpureFunction2(4, _c0, day_r23.month === ctx_r22.calendar.month, day_r23.date === ctx_r22.calendar.selectedDay));\r\n    ɵɵadvance(2);\r\n    ɵɵtextInterpolate(day_r23.day);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngForOf\", day_r23.events);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngIf\", day_r23.events.length > 4);\r\n} }\r\nfunction TTCalendarComponent_ng_container_0_tr_21_Template(rf, ctx) { if (rf & 1) {\r\n    ɵɵelementStart(0, \"tr\");\r\n    ɵɵtemplate(1, TTCalendarComponent_ng_container_0_tr_21_td_1_Template, 6, 7, \"td\", 13);\r\n    ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const week_r21 = ctx.$implicit;\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngForOf\", week_r21);\r\n} }\r\nfunction TTCalendarComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r33 = ɵɵgetCurrentView();\r\n    ɵɵelementContainerStart(0);\r\n    ɵɵelementStart(1, \"div\", 1);\r\n    ɵɵelementStart(2, \"div\", 2);\r\n    ɵɵelementStart(3, \"span\", 3);\r\n    ɵɵtemplate(4, TTCalendarComponent_ng_container_0_ng_container_4_Template, 3, 1, \"ng-container\", 0);\r\n    ɵɵelementStart(5, \"select\", 4, 5);\r\n    ɵɵlistener(\"blur\", function TTCalendarComponent_ng_container_0_Template_select_blur_5_listener() { ɵɵrestoreView(_r33); const ctx_r32 = ɵɵnextContext(); return ctx_r32.hideMonthYear(); });\r\n    ɵɵtemplate(7, TTCalendarComponent_ng_container_0_option_7_Template, 2, 2, \"option\", 6);\r\n    ɵɵelementEnd();\r\n    ɵɵtemplate(8, TTCalendarComponent_ng_container_0_ng_container_8_Template, 3, 1, \"ng-container\", 0);\r\n    ɵɵelementStart(9, \"input\", 4, 7);\r\n    ɵɵlistener(\"blur\", function TTCalendarComponent_ng_container_0_Template_input_blur_9_listener() { ɵɵrestoreView(_r33); const ctx_r34 = ɵɵnextContext(); return ctx_r34.hideMonthYear(); });\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n    ɵɵelementStart(11, \"div\", 8);\r\n    ɵɵtemplate(12, TTCalendarComponent_ng_container_0_span_12_Template, 2, 0, \"span\", 9);\r\n    ɵɵelementStart(13, \"span\", 10);\r\n    ɵɵlistener(\"click\", function TTCalendarComponent_ng_container_0_Template_span_click_13_listener() { ɵɵrestoreView(_r33); const ctx_r35 = ɵɵnextContext(); return ctx_r35.calendar.today(); });\r\n    ɵɵtext(14, \"Today\");\r\n    ɵɵelementEnd();\r\n    ɵɵtemplate(15, TTCalendarComponent_ng_container_0_span_15_Template, 2, 0, \"span\", 11);\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n    ɵɵelementStart(16, \"table\", 12);\r\n    ɵɵelementStart(17, \"thead\");\r\n    ɵɵelementStart(18, \"tr\");\r\n    ɵɵtemplate(19, TTCalendarComponent_ng_container_0_th_19_Template, 2, 1, \"th\", 13);\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n    ɵɵelementStart(20, \"tbody\");\r\n    ɵɵtemplate(21, TTCalendarComponent_ng_container_0_tr_21_Template, 2, 1, \"tr\", 13);\r\n    ɵɵelementEnd();\r\n    ɵɵelementEnd();\r\n    ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = ɵɵnextContext();\r\n    ɵɵadvance(4);\r\n    ɵɵproperty(\"ngIf\", !ctx_r0.month || ctx_r0.month && ctx_r0.month.disabled);\r\n    ɵɵadvance(1);\r\n    ɵɵclassProp(\"d-none\", !(ctx_r0.month && ctx_r0.month.enabled));\r\n    ɵɵproperty(\"formControl\", ctx_r0.month);\r\n    ɵɵadvance(2);\r\n    ɵɵproperty(\"ngForOf\", ctx_r0.TTCalendar.monthNames);\r\n    ɵɵadvance(1);\r\n    ɵɵproperty(\"ngIf\", !ctx_r0.year || ctx_r0.year && ctx_r0.year.disabled);\r\n    ɵɵadvance(1);\r\n    ɵɵclassProp(\"d-none\", !(ctx_r0.year && ctx_r0.year.enabled));\r\n    ɵɵproperty(\"formControl\", ctx_r0.year);\r\n    ɵɵadvance(3);\r\n    ɵɵproperty(\"ngIf\", ctx_r0.calendar.canMovePrev);\r\n    ɵɵadvance(3);\r\n    ɵɵproperty(\"ngIf\", ctx_r0.calendar.canMoveNext);\r\n    ɵɵadvance(4);\r\n    ɵɵproperty(\"ngForOf\", ctx_r0.TTCalendar.daysOfWeek);\r\n    ɵɵadvance(2);\r\n    ɵɵproperty(\"ngForOf\", ctx_r0.calendar.weeks);\r\n} }\r\nclass TTCalendarComponent {\r\n    constructor() {\r\n        this.min = new Date(1900, 1);\r\n        this.max = new Date(2100, 1);\r\n        this.date = new Date();\r\n        this.TTCalendar = TTCalendar;\r\n        this._destroyed$ = new Subject();\r\n    }\r\n    ngOnInit() {\r\n        this.createCalendar();\r\n        this.createForms();\r\n        this.handleFormChanges();\r\n    }\r\n    ngOnDestroy() {\r\n        this._destroyed$.next();\r\n        this._destroyed$.complete();\r\n    }\r\n    createCalendar() {\r\n        this.calendar = new TTCalendar({\r\n            date: typeof this.date === 'string' ? TTCalendar.stringToDate(this.date) : this.date,\r\n            events: this.events,\r\n            min: typeof this.min === 'string' ? TTCalendar.stringToDate(this.min) : this.min,\r\n            max: typeof this.max === 'string' ? TTCalendar.stringToDate(this.max) : this.max\r\n        });\r\n    }\r\n    createForms() {\r\n        this.year = new FormControl({ value: this.calendar.year, disabled: true });\r\n        this.month = new FormControl({ value: this.calendar.month, disabled: true });\r\n    }\r\n    editYear(yearControl) {\r\n        this.hideMonthYear();\r\n        this.year.enable({ emitEvent: false });\r\n        setTimeout(() => { yearControl.focus(); }, 0);\r\n    }\r\n    editMonth(monthControl) {\r\n        this.hideMonthYear();\r\n        this.month.enable({ emitEvent: false });\r\n        setTimeout(() => { monthControl.focus(); }, 0);\r\n    }\r\n    hideMonthYear() {\r\n        this.month.disable();\r\n        this.year.disable();\r\n    }\r\n    handleFormChanges() {\r\n        this.month.valueChanges.pipe(distinctUntilChanged(), filter(() => this.month.enabled), tap((month) => {\r\n            this.calendar.month = month;\r\n            this.month.setValue(this.calendar.month);\r\n            this.hideMonthYear();\r\n        }), takeUntil(this._destroyed$)).subscribe();\r\n        this.year.valueChanges.pipe(distinctUntilChanged(), filter(() => this.year.enabled), tap((year) => {\r\n            if (year.length === 4) {\r\n                this.calendar.year = year;\r\n                this.year.setValue(this.calendar.year);\r\n                this.hideMonthYear();\r\n            }\r\n        }), takeUntil(this._destroyed$)).subscribe();\r\n        this.calendar.dateChanged$.pipe(tap((date) => {\r\n            this.month.disable();\r\n            this.year.disable();\r\n            this.month.setValue(date.getMonth());\r\n            this.year.setValue(date.getFullYear());\r\n        }), takeUntil(this._destroyed$)).subscribe();\r\n    }\r\n    setEventActive(event) {\r\n        this.calendar.date = event.startDate;\r\n    }\r\n}\r\nTTCalendarComponent.ɵfac = function TTCalendarComponent_Factory(t) { return new (t || TTCalendarComponent)(); };\r\nTTCalendarComponent.ɵcmp = ɵɵdefineComponent({ type: TTCalendarComponent, selectors: [[\"tt-calendar\"]], inputs: { min: \"min\", max: \"max\", events: \"events\", date: \"date\" }, decls: 1, vars: 1, consts: [[4, \"ngIf\"], [1, \"row\", \"calendar-header\", \"pt-2\"], [1, \"col\"], [1, \"calendar-title\"], [1, \"calendar-input\", 3, \"formControl\", \"blur\"], [\"monthControl\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"yearControl\", \"\"], [1, \"col\", \"text-right\"], [\"class\", \"calendar-nav-button previous\", 3, \"click\", 4, \"ngIf\"], [1, \"calendar-nav-button\", \"ml-4\", \"mr-4\", 3, \"click\"], [\"class\", \"calendar-nav-button next\", 3, \"click\", 4, \"ngIf\"], [1, \"table\", \"calendar-table\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [3, \"value\"], [1, \"calendar-nav-button\", \"previous\", 3, \"click\"], [1, \"calendar-nav-button\", \"next\", 3, \"click\"], [3, \"ngClass\"], [1, \"day\"], [\"class\", \"additional-events\", 4, \"ngIf\"], [\"class\", \"text-center event\", 3, \"background-color\", 4, \"ngIf\"], [1, \"text-center\", \"event\"], [1, \"additional-events\"]], template: function TTCalendarComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵɵtemplate(0, TTCalendarComponent_ng_container_0_Template, 22, 13, \"ng-container\", 0);\r\n    } if (rf & 2) {\r\n        ɵɵproperty(\"ngIf\", ctx.calendar);\r\n    } }, directives: [NgIf, SelectControlValueAccessor, NgControlStatus, FormControlDirective, NgForOf, DefaultValueAccessor, NgSelectOption, ɵangular_packages_forms_forms_x, NgClass], styles: [\"@media only screen and (min-width:500px){.calendar-nav-button[_ngcontent-%COMP%]{font-size:13px!important;line-height:33px!important}tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{height:130px!important}tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:13px!important;padding:2px 0!important}tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:not(.day){margin:3px 0 0!important}}.calendar-header[_ngcontent-%COMP%], th[_ngcontent-%COMP%]{background-color:#323232;position:-webkit-sticky;position:sticky;top:0}th[_ngcontent-%COMP%]{top:40px}.calendar-header[_ngcontent-%COMP%]   .calendar-nav-button[_ngcontent-%COMP%]{background-color:transparent;border:1px solid #ffc107;border-radius:20px;color:#ffc107;cursor:pointer;font-size:10px;line-height:10px;padding:5px 10px;transition:background-color .3s;white-space:nowrap}.calendar-header[_ngcontent-%COMP%]   .calendar-nav-button[_ngcontent-%COMP%]:hover{background-color:#ffc107;border-color:#ffc107;color:#323232}.calendar-header[_ngcontent-%COMP%]   .calendar-nav-button.previous[_ngcontent-%COMP%]{border-bottom-right-radius:0}.calendar-header[_ngcontent-%COMP%]   .calendar-nav-button.next[_ngcontent-%COMP%]{border-bottom-left-radius:0}.calendar-header[_ngcontent-%COMP%]   .calendar-title[_ngcontent-%COMP%]{border-color:transparent;color:#fff!important;font-size:30px;font-weight:700;line-height:30px;white-space:nowrap}.calendar-table[_ngcontent-%COMP%]{table-layout:fixed}.calendar-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], .calendar-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{border-color:transparent;color:#fff}.calendar-table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{padding:5px 0}.calendar-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:0}.calendar-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{border:1px solid transparent!important;border-radius:5px;height:92px;overflow:hidden;padding:0}.calendar-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   div.selected-day[_ngcontent-%COMP%]{background-color:rgba(255,193,7,.4);border-color:#ffc107!important;font-weight:700}.calendar-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:not(.selected-month){color:hsla(0,0%,100%,.4)!important}.calendar-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:block;font-size:11px;overflow:hidden;padding:0;text-overflow:ellipsis;white-space:nowrap}.calendar-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:not(.day){margin:2px 0 0}.calendar-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   span.day[_ngcontent-%COMP%]{padding-left:5px!important}.calendar-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   span.additional-events[_ngcontent-%COMP%]{background-color:#bbb}\"] });\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(TTCalendarComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'tt-calendar',\r\n                templateUrl: './calendar.component.html',\r\n                styleUrls: ['./calendar.component.scss']\r\n            }]\r\n    }], function () { return []; }, { min: [{\r\n            type: Input\r\n        }], max: [{\r\n            type: Input\r\n        }], events: [{\r\n            type: Input\r\n        }], date: [{\r\n            type: Input\r\n        }] }); })();\n\nclass TTCalendarModule {\r\n}\r\nTTCalendarModule.ɵmod = ɵɵdefineNgModule({ type: TTCalendarModule });\r\nTTCalendarModule.ɵinj = ɵɵdefineInjector({ factory: function TTCalendarModule_Factory(t) { return new (t || TTCalendarModule)(); }, imports: [[\r\n            CommonModule,\r\n            ReactiveFormsModule\r\n        ]] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵɵsetNgModuleScope(TTCalendarModule, { declarations: [TTCalendarComponent], imports: [CommonModule,\r\n        ReactiveFormsModule], exports: [TTCalendarComponent] }); })();\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(TTCalendarModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [TTCalendarComponent],\r\n                imports: [\r\n                    CommonModule,\r\n                    ReactiveFormsModule\r\n                ],\r\n                exports: [\r\n                    TTCalendarComponent\r\n                ]\r\n            }]\r\n    }], null, null); })();\n\nclass TTCommonModule {\r\n}\r\nTTCommonModule.ɵmod = ɵɵdefineNgModule({ type: TTCommonModule });\r\nTTCommonModule.ɵinj = ɵɵdefineInjector({ factory: function TTCommonModule_Factory(t) { return new (t || TTCommonModule)(); }, imports: [[\r\n            CommonModule,\r\n            TTCalendarModule\r\n        ], TTCalendarModule] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵɵsetNgModuleScope(TTCommonModule, { imports: [CommonModule,\r\n        TTCalendarModule], exports: [TTCalendarModule] }); })();\r\n/*@__PURE__*/ (function () { ɵsetClassMetadata(TTCommonModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [],\r\n                imports: [\r\n                    CommonModule,\r\n                    TTCalendarModule\r\n                ],\r\n                exports: [\r\n                    TTCalendarModule\r\n                ]\r\n            }]\r\n    }], null, null); })();\n\nclass RxJSHelper {\r\n    static combineLatestDictionary(dictionary) {\r\n        return combineLatest(Object.values(dictionary)).pipe(map((keys) => {\r\n            const data = {};\r\n            Object.keys(dictionary).forEach((key, index) => {\r\n                data[key] = keys[index];\r\n            });\r\n            return data;\r\n        }));\r\n    }\r\n}\n\nclass RxJSOperators {\r\n    /** Delays Values from being emitted when observable is Truthy. When Observable is not Truthy, emits last value  */\r\n    static delayWhenTruthy(truthyObs$) {\r\n        return source$ => {\r\n            let cachedResult;\r\n            return combineLatest([\r\n                source$,\r\n                truthyObs$.pipe(startWith(false), distinctUntilChanged())\r\n            ]).pipe(tap(([result, paused]) => {\r\n                if (!paused) {\r\n                    if (Array.isArray(result)) {\r\n                        cachedResult = [...result];\r\n                    }\r\n                    else if (typeof result === 'object') {\r\n                        cachedResult = Object.assign({}, result);\r\n                    }\r\n                    else {\r\n                        cachedResult = result;\r\n                    }\r\n                }\r\n            }), map(([result, paused]) => {\r\n                return paused ? cachedResult : result;\r\n            }));\r\n        };\r\n    }\r\n}\n\nclass Color {\r\n    constructor({ r = 0, g = 0, b = 0 } = {}) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n    }\r\n}\n\nclass Vector {\r\n    constructor({ x = 0, y = 0, z = 0 } = {}) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n}\n\n/*\r\n * Public API Surface of tt-common\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { Color, RxJSHelper, RxJSOperators, TTCalendar, TTCalendarComponent, TTCalendarModule, TTCommonModule, Vector };\n//# sourceMappingURL=tt-common.js.map\n","export default \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"pb-md-3\\\">\\r\\n        <div class=\\\"pt-2\\\">\\r\\n          <span class=\\\"badge text-white mr-2\\\" style=\\\"background-color: rgb(33, 150, 243);\\\">Midday</span>\\r\\n          <span class=\\\"badge text-white\\\" style=\\\"background-color: rgb(76, 175, 80);\\\">Evening</span>\\r\\n        </div>\\r\\n        <tt-calendar [events]=\\\"lottoEvents\\\"></tt-calendar>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-4\\\" *ngIf=\\\"lottoSearchGroup != null\\\">\\r\\n      <div class=\\\"pb-3\\\">\\r\\n      <div class=\\\"d-lg-block d-none mb-3 mt-4\\\">\\r\\n        <span class=\\\"btn btn-primary clickable mr-3\\\" (click)=\\\"getLatest()\\\">Get Latest</span>\\r\\n        <span class=\\\"btn btn-danger clickable\\\" (click)=\\\"getStatistics()\\\">Get Statistics</span>\\r\\n      </div>\\r\\n      <ng-container *ngIf=\\\"!showAdd\\\">\\r\\n      <form [formGroup]=\\\"lottoSearchGroup\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"theme-text\\\">Number</label>\\r\\n          <input class=\\\"form-control\\\" formControlName=\\\"number\\\" />\\r\\n        </div>\\r\\n              <div class=\\\"btn-group w-100\\\" role=\\\"group\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn\\\" [ngClass]=\\\"{'theme-button-outline' : lottoSearch.playType.value !== 1, 'theme-button' : lottoSearch.playType.value === 1}\\\" (click)=\\\"searchBox()\\\">Box</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn\\\" [ngClass]=\\\"{'theme-button-outline' : lottoSearch.playType.value !== 2, 'theme-button' : lottoSearch.playType.value === 2}\\\" (click)=\\\"searchStraight()\\\">Straight</button>\\r\\n              </div>\\r\\n            </form>\\r\\n            <ng-container *ngIf=\\\"!lottoSearch.playType.value\\\">\\r\\n              <h3 class=\\\"mt-4 theme-text\\\">Top Numbers</h3>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <h6 class=\\\"theme-text\\\">Numbers (Midday)</h6>\\r\\n                  <ul>\\r\\n                    <li *ngFor=\\\"let result of statisticsLottoJSON.numbersMidday | slice:0:5\\\" class=\\\"theme-text\\\">\\r\\n                      <span class=\\\"theme-text\\\">{{result.number + ' - Count ' + result.count}}</span>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                  <h6 class=\\\"theme-text\\\">Numbers (Evening)</h6>\\r\\n                  <ul>\\r\\n                    <li *ngFor=\\\"let result of statisticsLottoJSON.numbersEvening | slice:0:5\\\" class=\\\"theme-text\\\">\\r\\n                      <span class=\\\"theme-text\\\">{{result.number + ' - Count ' + result.count}}</span>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <h6 class=\\\"theme-text\\\">Win4 (Midday)</h6>\\r\\n                  <ul>\\r\\n                    <li *ngFor=\\\"let result of statisticsLottoJSON.win4Midday | slice:0:5\\\" class=\\\"theme-text\\\">\\r\\n                      <span class=\\\"theme-text\\\">{{result.number + ' - Count ' + result.count}}</span>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                  <h6 class=\\\"theme-text\\\">Win4 (Evening)</h6>\\r\\n                  <ul>\\r\\n                    <li *ngFor=\\\"let result of statisticsLottoJSON.win4Evening | slice:0:5\\\" class=\\\"theme-text\\\">\\r\\n                      <span class=\\\"theme-text\\\">{{result.number + ' - Count ' + result.count}}</span>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </div>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n            <div class=\\\"border rounded mt-3 px-3 pb-3 search-results-wrapper\\\" *ngIf=\\\"lottoSearch.playType.value\\\">\\r\\n              <div class=\\\"row search-results-title\\\">\\r\\n                <div class=\\\"col-9\\\">\\r\\n                  <h3 class=\\\"mb-0 py-2 theme-text\\\">Results</h3>\\r\\n                </div>\\r\\n                <div class=\\\"col-3\\\">\\r\\n                  <h3 class=\\\"mb-0 py-2 theme-text text-right\\\">({{lottoSearchResults.length}})</h3>\\r\\n                </div>\\r\\n              </div>\\r\\n            <ul class=\\\"mb-0 search-results\\\">\\r\\n              <li *ngFor=\\\"let event of lottoSearchResults\\\" class=\\\"theme-text\\\">\\r\\n                <span class=\\\"theme-text clickable\\\" (click)=\\\"setCalendar(event)\\\">\\r\\n                  <span class=\\\"badge\\\" style=\\\"width: 18px; padding: .25em 0\\\" [style.background-color]=\\\"event.meta?.midday ? 'rgb(33, 150, 243)' : 'rgb(76, 175, 80)'\\\">{{event.meta?.midday ? 'M' : 'E'}}</span>\\r\\n                  {{event.startDate | date}} - {{event.title}} \\r\\n                </span>\\r\\n              </li>\\r\\n            </ul>\\r\\n            </div>\\r\\n      </ng-container>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LottoCalendarComponent } from './pages/lotto-calendar/lotto-calendar.component';\r\n\r\nconst routes: Routes = [{ path: '', component: LottoCalendarComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CalendarRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CalendarRoutingModule } from './calendar-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LottoCalendarComponent } from './pages/lotto-calendar/lotto-calendar.component';\r\nimport { LottoDataService } from './services/lotto-data.service';\r\nimport { TTCommonModule } from '@tt/common';\r\n\r\n@NgModule({\r\n  providers: [\r\n    LottoDataService\r\n  ],\r\n  declarations: [\r\n    LottoCalendarComponent\r\n    ],\r\n  imports: [\r\n    CommonModule,\r\n    CalendarRoutingModule,\r\n    ReactiveFormsModule,\r\n    FontAwesomeModule,\r\n    HttpClientModule,\r\n    TTCommonModule\r\n  ]\r\n})\r\nexport class CalendarModule { }\r\n","import { TTCalendar } from '@tt/common';\r\n\r\nexport class LottoSearch {\r\n\r\n  static searchBox(calendar: TTCalendar, searchValue: string): any[] {\r\n    let eventSearchResults = [];\r\n    if (searchValue && (searchValue.length === 3 || searchValue.length === 4) && !isNaN(searchValue as any)) {\r\n      const matchingKeyValues = {};\r\n      searchValue.split('').forEach((n) => {\r\n        matchingKeyValues[n] = matchingKeyValues[n] ? matchingKeyValues[n] + 1 : 1;\r\n      });\r\n      eventSearchResults = calendar.events.filter((c) => {\r\n        if (c.meta.number.length !== searchValue.length) {\r\n          return false;\r\n        }\r\n        const keyValues = {};\r\n        c.meta.number.split('').forEach((n) => {\r\n          keyValues[n] = keyValues[n] ? keyValues[n] + 1 : 1;\r\n        });\r\n        return Object.keys(matchingKeyValues)\r\n        .filter((key) => matchingKeyValues[key] === keyValues[key]).length === Object.keys(matchingKeyValues).length;\r\n      }).sort((a, b) => (b.startDate as any) - (a.startDate as any));\r\n    }\r\n    return eventSearchResults;\r\n  }\r\n\r\n  static searchStraight(calendar: TTCalendar, searchValue: string): any[] {\r\n    let eventSearchResults = [];\r\n    if (searchValue && (searchValue.length === 3 || searchValue.length === 4) && !isNaN(searchValue as any)) {\r\n      eventSearchResults = calendar.events\r\n      .filter((c) => c.meta.number === searchValue)\r\n      .sort((a, b) => (b.startDate as any) - (a.startDate as any));\r\n    }\r\n    return eventSearchResults;\r\n  }\r\n\r\n  static isEqualBox(numberA: string, numberB: string): boolean {\r\n    if (!numberA || !numberB) {\r\n      return false;\r\n    }\r\n    if (numberA.length !== numberB.length) {\r\n      return false;\r\n    }\r\n    const keyValuesA = {};\r\n    numberA.split('').forEach((n) => {\r\n      keyValuesA[n] = keyValuesA[n] ? keyValuesA[n] + 1 : 1;\r\n    });\r\n    const keyValuesB = {};\r\n    numberB.split('').forEach((n) => {\r\n      keyValuesB[n] = keyValuesB[n] ? keyValuesB[n] + 1 : 1;\r\n    });\r\n    return Object.keys(keyValuesA)\r\n    .filter((key) => keyValuesA[key] === keyValuesB[key]).length === Object.keys(keyValuesB).length;\r\n  }\r\n}\r\n","export default \"/* @include themes() { color: theme(buttonTextColor); } */\\n/* background-color: color(darkgrey) */\\n/* Defines A Map of Maps */\\n/* webkit moz ms */\\n/* Duplicate Styling For Each Theme */\\n/* Duplicate Styling For Each Theme On :Host*/\\n/* @include breakpoints(tablet-wide) { padding-top: 4rem;} */\\n/* @include prefixes((  transition: all 0.3s ease, transform: translateX(90px)  )) */\\n/* @include themes() { color: theme(buttonTextColor); } */\\n/* background-color: color(darkgrey) */\\n/* Defines A Map of Maps */\\n/* webkit moz ms */\\n/* Duplicate Styling For Each Theme */\\n/* Duplicate Styling For Each Theme On :Host*/\\n/* @include breakpoints(tablet-wide) { padding-top: 4rem;} */\\n/* @include prefixes((  transition: all 0.3s ease, transform: translateX(90px)  )) */\\nhtml, body {\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden;\\n  padding: 0;\\n  margin: 0;\\n}\\n:host-context(.theme-light) .theme-text {\\n  color: #323232;\\n}\\n:host-context(.theme-dark) .theme-text {\\n  color: #ffffff;\\n}\\n:host-context(.theme-light) .theme-button {\\n  color: #ffffff;\\n  border-color: #323232;\\n  background-color: #323232;\\n}\\n:host-context(.theme-dark) .theme-button {\\n  color: #323232;\\n  border-color: #ffc107;\\n  background-color: #ffc107;\\n}\\n:host-context(.theme-light) .theme-button:hover {\\n  color: #ffffff;\\n  border-color: #252525;\\n  background-color: #252525;\\n}\\n:host-context(.theme-dark) .theme-button:hover {\\n  color: #323232;\\n  border-color: #edb100;\\n  background-color: #edb100;\\n}\\n:host-context(.theme-light) .theme-button-outline {\\n  color: #323232;\\n  border-color: #323232;\\n  background-color: transparent;\\n}\\n:host-context(.theme-dark) .theme-button-outline {\\n  color: #ffc107;\\n  border-color: #ffc107;\\n  background-color: transparent;\\n}\\n:host-context(.theme-light) .theme-button-outline:hover {\\n  color: #ffffff;\\n  border-color: #323232;\\n  background-color: #323232;\\n}\\n:host-context(.theme-dark) .theme-button-outline:hover {\\n  color: #323232;\\n  border-color: #ffc107;\\n  background-color: #ffc107;\\n}\\n.toggle {\\n  position: relative;\\n  display: inline-block;\\n  width: 50px;\\n  height: 24px;\\n  margin: 0 30px;\\n}\\n.toggle input {\\n  opacity: 0;\\n  width: 0;\\n  height: 0;\\n}\\n.toggle input:checked ~ span:before {\\n  transform: translateX(26px);\\n}\\n.toggle span {\\n  position: absolute;\\n  cursor: pointer;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #323232;\\n  border-radius: 24px;\\n  transition: 0.4s;\\n}\\n:host-context(.theme-light) .toggle span {\\n  background-color: #323232;\\n}\\n:host-context(.theme-dark) .toggle span {\\n  background-color: #ffc107;\\n}\\n.toggle span:before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  height: 16px;\\n  width: 16px;\\n  left: 4px;\\n  bottom: 4px;\\n  border-radius: 50%;\\n  transition: 0.4s;\\n}\\n:host-context(.theme-light) .toggle span:before {\\n  background-color: #ffffff;\\n}\\n:host-context(.theme-dark) .toggle span:before {\\n  background-color: #323232;\\n}\\n.toggle .toggle-icon {\\n  vertical-align: top;\\n  height: 24px;\\n  position: absolute;\\n  width: 16px;\\n  font-size: 16px;\\n}\\n.toggle .toggle-icon:before {\\n  position: absolute;\\n  top: 50%;\\n  transform: translateY(-50%);\\n}\\n.toggle .toggle-icon-left {\\n  color: #ffc107;\\n  left: -50%;\\n}\\n.toggle .toggle-icon-right {\\n  right: -50%;\\n}\\n.clickable {\\n  cursor: pointer;\\n}\\n:host {\\n  overflow-y: auto;\\n  display: block;\\n  height: calc(100% - 50px);\\n}\\n.search-results-wrapper {\\n  max-height: 400px;\\n  overflow: auto;\\n}\\n.search-results-wrapper .search-results-title {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n}\\n:host-context(.theme-light) .search-results-wrapper .search-results-title {\\n  background-color: #ffffff;\\n}\\n:host-context(.theme-dark) .search-results-wrapper .search-results-title {\\n  background-color: #323232;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\";","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { TTCalendarComponent, TTCalendarEvent } from '@tt/common';\r\nimport { LottoDataService } from '../../services/lotto-data.service';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { tap, distinctUntilChanged, takeUntil, filter } from 'rxjs/operators';\r\nimport StatisticsLottoJSON from '../../../../../assets/statistics-lotto.json';\r\nimport { LottoSearch } from '../../classes/lotto-search';\r\n\r\n@Component({\r\n  selector: 'app-lotto-calendar',\r\n  templateUrl: './lotto-calendar.component.html',\r\n  styleUrls: ['./lotto-calendar.component.scss']\r\n})\r\nexport class LottoCalendarComponent implements OnInit, OnDestroy {\r\n  year: FormControl;\r\n  month: FormControl;\r\n  lottoSearchGroup: FormGroup;\r\n  lottoSearchResults: any[];\r\n  statisticsLottoJSON = StatisticsLottoJSON;\r\n  lottoEvents: TTCalendarEvent[] = [];\r\n  @ViewChild(TTCalendarComponent, { static: true }) calendarComponent: TTCalendarComponent;\r\n\r\n  get calendar() { return this.calendarComponent ? this.calendarComponent.calendar : null; }\r\n\r\n  get lottoSearch() { return this.lottoSearchGroup.controls; }\r\n\r\n  private _destroyed$: Subject<any> = new Subject();\r\n\r\n  constructor(private lottoData: LottoDataService, private fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.lottoEvents = this.lottoData.getLottoEvents();\r\n    this.createForms();\r\n    this.handleFormChanges();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._destroyed$.next();\r\n    this._destroyed$.complete();\r\n  }\r\n\r\n  getLatest() {\r\n    this.lottoData.getLatestLottoData();\r\n  }\r\n\r\n  getStatistics() {\r\n    this.lottoData.getLottoStatistics();\r\n  }\r\n\r\n  createForms() {\r\n    this.lottoSearchGroup = this.fb.group({\r\n      number: this.fb.control(null),\r\n      playType: this.fb.control(null)\r\n    });\r\n  }\r\n\r\n  handleFormChanges() {\r\n    this.lottoSearch.number.valueChanges.pipe(\r\n      tap(() => {\r\n        if (this.lottoSearch.playType.value) {\r\n          this.lottoSearch.playType.setValue(null);\r\n          this.lottoSearchResults = [];\r\n        }\r\n      }),\r\n      takeUntil(this._destroyed$)\r\n    ).subscribe();\r\n\r\n    this.lottoSearch.playType.valueChanges.pipe(\r\n      distinctUntilChanged(),\r\n      filter((p) => p != null),\r\n      tap(() => {\r\n        this.lottoSearchResults = [];\r\n        switch (this.lottoSearch.playType.value) {\r\n          case 1:\r\n            this.lottoSearchResults = LottoSearch.searchBox(this.calendar, this.lottoSearch.number.value);\r\n          break;\r\n          case 2:\r\n            this.lottoSearchResults = LottoSearch.searchStraight(this.calendar, this.lottoSearch.number.value);\r\n          break;\r\n        }\r\n        if (this.lottoSearchResults.length === 0) {\r\n          this.lottoSearch.playType.setValue(null);\r\n        }\r\n      }),\r\n      takeUntil(this._destroyed$)\r\n    ).subscribe();\r\n  }\r\n\r\n  searchBox() {\r\n    this.lottoSearch.playType.setValue(1);\r\n  }\r\n\r\n  searchStraight() {\r\n    this.lottoSearch.playType.setValue(2);\r\n  }\r\n\r\n  setCalendar(event: TTCalendarEvent) {\r\n    this.calendarComponent.setEventActive(event);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TTCalendar, TTCalendarEvent } from '@tt/common';\r\nimport ParsedLottoJSON from '../../../../assets/parsed-lotto.json';\r\nimport { Vector } from '@app/classes/vector';\r\nimport { takeUntil, tap, map, catchError } from 'rxjs/operators';\r\nimport { Subject, Observable, from, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { LottoSearch } from '../classes/lotto-search';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LottoDataService {\r\n  private loading$: Subject<boolean> = new Subject();\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getLottoEvents(): TTCalendarEvent[] {\r\n    const calendarEvents = [];\r\n    ParsedLottoJSON.forEach((data) => {\r\n      if (data.date) {\r\n        [{ midday: true, value: data.numbersMidday, color: new Vector({x: 33, y: 150, z: 243})},\r\n          { midday: true, value: data.win4Midday, color: new Vector({x: 33, y: 150, z: 243})},\r\n          { midday: false, value: data.numbersEvening, color: new Vector({x: 76, y: 175, z: 80})},\r\n          { midday: false, value: data.win4Evening, color: new Vector({x: 76, y: 175, z: 80})}].forEach((p) => {\r\n          if (p.value) {\r\n            calendarEvents.push({\r\n              title: p.value,\r\n              color: p.color,\r\n              startDate: TTCalendar.stringToDate(data.date),\r\n              meta: {\r\n                number: p.value,\r\n                midday: p.midday\r\n              }\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        console.log('Bad Data', data);\r\n      }\r\n    });\r\n    return calendarEvents;\r\n  }\r\n\r\n  getLatestLottoData() {\r\n      this.loading$.next(true);\r\n      this.http.get('https://data.ny.gov/api/views/hsys-3def/rows.json?accessType=DOWNLOAD&sorting=true').pipe(\r\n        takeUntil(this.loading$)\r\n      ).subscribe((val: any) => {\r\n        let parsedData = this.parseLottoEvents(val.data);\r\n        const allValidDates = ParsedLottoJSON\r\n        .filter((s) => !!s.date && !!s.numbersMidday && !!s.numbersEvening && !!s.win4Midday && !!s.win4Evening)\r\n        .map((s) => TTCalendar.stringToDate(s.date)).sort((a, b) => (b as any) - (a as any));\r\n        const lastValidDate: Date = allValidDates.length > 0 ? allValidDates[0] : new Date();\r\n\r\n        parsedData = parsedData.filter((d) => TTCalendar.stringToDate(d.date) > lastValidDate);\r\n        if (parsedData.length > 0) {\r\n          this.getUpdatedLottoData(parsedData);\r\n        } else {\r\n          console.log('Up to Date');\r\n        }\r\n      });\r\n    }\r\n\r\n    private parseLottoEvents(eventData: any[]) {\r\n      return eventData.map((data) => {\r\n        const date = data[8] ? TTCalendar.dateToString(new Date(data[8])) : undefined;\r\n        const numbersMidday = data[9] && data[9].toString().trim().length > 0 ? data[9].toString().trim() : undefined;\r\n        const numbersEvening = data[11] && data[11].toString().trim().length > 0 ? data[11].toString().trim() : undefined;\r\n        const win4Midday = data[13] && data[13].toString().trim().length > 0 ? data[13].toString().trim() : undefined;\r\n        const win4Evening = data[15] && data[15].toString().trim().length > 0 ? data[15].toString().trim() : undefined;\r\n        return { date, numbersMidday, numbersEvening, win4Midday, win4Evening};\r\n      });\r\n    }\r\n\r\n\r\n  private getUpdatedLottoData(val: any[]) {\r\n    const allData = this.removeDuplicates([...val, ...ParsedLottoJSON])\r\n    .sort((a, b) => (TTCalendar.stringToDate(b.date) as any) - (TTCalendar.stringToDate(a.date) as any))\r\n    .reverse();\r\n    this.copyToClipBoard('Lotto Data', allData).subscribe((res) => {\r\n      if (res) {\r\n        this.getLottoStatistics(allData);\r\n      }\r\n    });\r\n  }\r\n\r\n  private copyToClipBoard(message: string, data: any): Observable<boolean> {\r\n    confirm('Focusing To Copy Clipboard');\r\n    return from(navigator.clipboard.writeText(JSON.stringify(data))).pipe(\r\n      tap(() => console.log('Copied to Clipboard: ' + message)),\r\n      map(() => true),\r\n      catchError((err) => of(false))\r\n    );\r\n  }\r\n\r\n  getLottoStatistics(newData: any[] = ParsedLottoJSON) {\r\n    const obj = {\r\n      numbersMidday: [],\r\n      numbersEvening: [],\r\n      win4Midday: [],\r\n      win4Evening: []\r\n    };\r\n\r\n    const findNumber = (array, num) => array.find((h) => LottoSearch.isEqualBox(h.number, num));\r\n    const setData = (s, objArray) => {\r\n      if (s) {\r\n        const found = findNumber(objArray, s);\r\n        if (found) {\r\n          found.count++;\r\n        } else {\r\n          objArray.push({ number: s, count: 1 });\r\n        }\r\n      }\r\n    };\r\n    newData.forEach((s) => {\r\n      setData(s.numbersMidday, obj.numbersMidday);\r\n      setData(s.numbersEvening, obj.numbersEvening);\r\n      setData(s.win4Midday, obj.win4Midday);\r\n      setData(s.win4Evening, obj.win4Evening);\r\n    });\r\n    obj.numbersMidday.sort((a, b) => b.count - a.count);\r\n    obj.numbersEvening.sort((a, b) => b.count - a.count);\r\n    obj.win4Midday.sort((a, b) => b.count - a.count);\r\n    obj.win4Evening.sort((a, b) => b.count - a.count);\r\n\r\n    this.copyToClipBoard('Lotto Statistics', obj).subscribe();\r\n  }\r\n\r\n  private removeDuplicates(data) {\r\n    return data.reduce((unique, item) => {\r\n      const index = unique.findIndex((s) => s.date === item.date);\r\n      if (index !== -1) {\r\n        unique[index] = {...unique[index], ...item};\r\n        return unique;\r\n      }\r\n      return [...unique, item];\r\n    }, []);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}